#!/bin/sh


for file in "${1:=*.org}"; do
    emacs "$file" -l ~/.emacs.d/init.el --batch -f org-md-export-to-markdown --kill
    filename=$(basename -- "$file")
    filename="${filename%.*}"
    mdfile="$filename.md"
    mdxfile="$filename.mdx"
    #Generates table of contents.
    toc=$(cat "$mdfile" | grep -E "^#{1,5} " | sed -E 's/(#+) (.+)/\1~\2~\2/g' | awk -F "~" '{ gsub(/#/,"  ",$1); gsub(/[ ]/,"-",$3); print $1 "- [" $2 "](#" tolower($3) ")" }' | sed 's/(\(.*\):\(.*\))/(\1\2)/g')
    echo "---" > "$mdxfile"
    awk -v RS='(\r?\n){2,}' '{print; exit}' "$file" | sed 's/#+//g' >> "$mdxfile"
    echo "---" >> "$mdxfile"
    toc_clean="${toc//$'\n'/\\n}"
    cat "$filename.md" >> "$mdxfile"
    sed -i "s/.*Hope You are Blessed!/$toc_clean/" "$mdxfile"
    emacs "$file" -l ~/.emacs.d/init.el --batch -f org-latex-export-to-latex --kill
    currentdir=${result:-/}        # to correct for the case where PWD=/
    if [ "$currentdir" = "posts" ] 
    then
        currentdir=""
    fi
    pandoc --template eisvogel.latex -i "$filename.tex" -o "assets/$currentdir/$filename.pdf"
    result=${PWD##*/}          # to assign to a variable
        
    mkdir -p "/home/joshu/projects/joshministers-blog/data/blog/$currentdir"
    cp "$mdxfile" "/home/joshu/projects/joshministers-blog/data/blog/$currentdir/"
    rm "$filename.md" "$filename.tex"
done

# I got the TOC one liner from here: https://medium.com/@acrodriguez/one-liner-to-generate-a-markdown-toc-f5292112fd14
